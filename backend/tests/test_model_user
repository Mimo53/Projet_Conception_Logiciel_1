import pytest
from sqlalchemy.orm import sessionmaker
from backend.app.db.database import SessionLocal, engine
from backend.app.models.user_model import User
from backend.app.models.enums import Role

@pytest.fixture(scope="module")
def db_session():
    """Fixture pour créer une session de test"""
    Session = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = Session()
    yield db
    db.close()

def test_create_user(db_session):
    """Test de création d'un utilisateur dans la base de données"""
    new_user = User(
        username="test_user",
        password="test_password",
        role=Role.USER,
        e_mail="test@example.com"
    )

    db_session.add(new_user)
    db_session.commit()

    # Vérifie que l'utilisateur a bien été inséré
    db_user = db_session.query(User).filter(User.username == "test_user").first()
    assert db_user is not None
    assert db_user.username == "test_user"
    assert db_user.e_mail == "test@example.com"
    assert db_user.role == Role.USER

def test_user_update(db_session):
    """Test de mise à jour d'un utilisateur"""
    user = db_session.query(User).filter(User.username == "test_user").first()
    user.e_mail = "new_email@example.com"
    db_session.commit()

    updated_user = db_session.query(User).filter(User.username == "test_user").first()
    assert updated_user.e_mail == "new_email@example.com"
