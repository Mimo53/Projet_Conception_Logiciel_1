import React from 'react';
import { Navigate } from 'react-router-dom';
import jwt_decode from 'jwt-decode';  // Import pour d√©coder le token JWT

const PrivateRoute = ({ children, adminOnly = false }) => {
  const token = localStorage.getItem('token');
  
  // V√©rifie si le token est pr√©sent
  if (!token) {
    return <Navigate to="/login" />;
  }

  try {
    // D√©code le token pour r√©cup√©rer le r√¥le de l'utilisateur
    const decodedToken = jwt_decode(token);
    console.log("Token d√©cod√© dans PrivateRoute:", decodedToken);

    // üî• Correction : Nettoyer le r√¥le et le mettre en minuscules
    const userRole = decodedToken.role.replace("Role.", "").toLowerCase();
    console.log("R√¥le normalis√© dans PrivateRoute:", userRole);

    // Si l'utilisateur n'est pas un admin et que la route est r√©serv√©e aux admin, on redirige
    if (adminOnly && userRole !== 'admin') {
      console.warn("Acc√®s refus√© : Non admin essayant d'acc√©der √† une route admin.");
      return <Navigate to="/dashboard" />;  // Redirection vers le Dashboard si ce n'est pas un Admin
    }

  } catch (error) {
    console.error("Erreur de d√©codage du token", error);
    return <Navigate to="/login" />;  // Si le d√©codage √©choue, redirige vers login
  }

  // Si l'utilisateur est authentifi√© et le r√¥le est correct (admin si n√©cessaire), on affiche le contenu
  return children;
};

export default PrivateRoute;
